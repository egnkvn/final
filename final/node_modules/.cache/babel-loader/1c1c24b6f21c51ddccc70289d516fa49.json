{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\vscode\\\\webfinalproject\\\\final\\\\final\\\\final\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _objectSpread from\"C:\\\\vscode\\\\webfinalproject\\\\final\\\\final\\\\final\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _slicedToArray from\"C:\\\\vscode\\\\webfinalproject\\\\final\\\\final\\\\final\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\vscode\\\\webfinalproject\\\\final\\\\final\\\\final\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import\"mapbox-gl/dist/mapbox-gl.css\";import\"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";import React,{useState,useRef,useCallback,useEffect}from\"react\";import MapGL,{NavigationControl,ScaleControl,GeolocateControl,LinearInterpolator}from\"react-map-gl\";import Geocoder from\"react-map-gl-geocoder.js\";import mapboxgl from\"mapbox-gl\";// This is a dependency of react-map-gl even if you didn't explicitly install it\n/* eslint import/no-webpack-loader-syntax: off */import MapboxWorker from'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker.js';import{DatePicker}from'antd';import moment from\"moment\";import axios from\"../../axios.js\";import Pins from'../../Component/Pins.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";mapboxgl.workerClass=MapboxWorker;var Map=function Map(_ref){var username=_ref.username;var _useState=useState(moment()),_useState2=_slicedToArray(_useState,2),Date=_useState2[0],setDate=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),Data=_useState4[0],setData=_useState4[1];var _useState5=useState({latitude:25.017754858333614,longitude:121.53968590135806,zoom:13}),_useState6=_slicedToArray(_useState5,2),viewport=_useState6[0],setViewport=_useState6[1];var mapRef=useRef();var handleViewportChange=useCallback(function(newViewport){return setViewport(newViewport);},[]);var MAPBOX_TOKEN=\"pk.eyJ1IjoiZW5naW5la2V2aW4iLCJhIjoiY2t5ZXVqYXU1MGJjMDJvcG1tNmY3enEwcSJ9.6zVa7flOmlUMpCSKOmwvkA\";var handleGeocoderViewportChange=useCallback(function(newViewport){var geocoderDefaultOverrides={transitionDuration:2000};return handleViewportChange(_objectSpread(_objectSpread({},newViewport),geocoderDefaultOverrides));},[handleViewportChange]);if(\"geolocation\"in navigator){navigator.geolocation.getCurrentPosition(function(position){console.log(position.coords.latitude,position.coords.longitude);});}var GetData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var Y,_yield$axios$get,NewRecords;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:Y=Date.format(\"YYYY\");_context.next=3;return axios.get('/api/QueryAddress',{// get backend\nparams:{username:username,// give backend\ndate_Y:Y,status:\"??��??\"}});case 3:_yield$axios$get=_context.sent;NewRecords=_yield$axios$get.data.NewRecords;setData(NewRecords);case 6:case\"end\":return _context.stop();}}},_callee);}));return function GetData(){return _ref2.apply(this,arguments);};}();useEffect(function(){GetData();},[Date]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(DatePicker,{size:\"large\",value:Date,picker:\"year\",onChange:function onChange(date){setDate(date);},allowClear:false}),/*#__PURE__*/_jsx(\"div\",{style:{height:\"90vh\"},children:/*#__PURE__*/_jsxs(MapGL,_objectSpread(_objectSpread({ref:mapRef},viewport),{},{mapStyle:\"mapbox://styles/mapbox/streets-v11\",width:\"100%\",height:\"100%\",onViewportChange:handleViewportChange,mapboxApiAccessToken:MAPBOX_TOKEN,transitionInterpolator:new LinearInterpolator(),children:[console.log(Data),\";\",Data.map(function(info){return/*#__PURE__*/_jsx(Pins,{info:info});}),/*#__PURE__*/_jsx(Geocoder,{mapRef:mapRef,onViewportChange:handleGeocoderViewportChange,mapboxApiAccessToken:MAPBOX_TOKEN,position:\"top-left\",style:{right:'50px',top:'10px'}}),/*#__PURE__*/_jsx(NavigationControl,{style:{right:'10px',top:'10px'}}),/*#__PURE__*/_jsx(ScaleControl,{maxWidth:100,unit:\"metric\",style:{right:'10px',bottom:'25px'}}),/*#__PURE__*/_jsx(GeolocateControl,{style:{right:'10px',top:'120px'},positionOptions:{enableHighAccuracy:true},trackUserLocation:false})]}))})]});};export default Map;","map":{"version":3,"sources":["C:/vscode/webfinalproject/final/final/final/src/Containers/Map/Map.js"],"names":["React","useState","useRef","useCallback","useEffect","MapGL","NavigationControl","ScaleControl","GeolocateControl","LinearInterpolator","Geocoder","mapboxgl","MapboxWorker","DatePicker","moment","axios","Pins","workerClass","Map","username","Date","setDate","Data","setData","latitude","longitude","zoom","viewport","setViewport","mapRef","handleViewportChange","newViewport","MAPBOX_TOKEN","handleGeocoderViewportChange","geocoderDefaultOverrides","transitionDuration","navigator","geolocation","getCurrentPosition","position","console","log","coords","GetData","Y","format","get","params","date_Y","status","NewRecords","data","date","height","map","info","right","top","bottom","enableHighAccuracy"],"mappings":"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","sourcesContent":["import \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\r\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport MapGL, { NavigationControl, ScaleControl, GeolocateControl, LinearInterpolator } from \"react-map-gl\";\r\nimport Geocoder from \"react-map-gl-geocoder.js\";\r\nimport mapboxgl from \"mapbox-gl\"; // This is a dependency of react-map-gl even if you didn't explicitly install it\r\n/* eslint import/no-webpack-loader-syntax: off */\r\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker.js';\r\nimport { DatePicker } from 'antd';\r\nimport moment from \"moment\";\r\nimport axios from \"../../axios.js\"\r\nimport Pins from '../../Component/Pins.js'\r\nmapboxgl.workerClass = MapboxWorker;\r\n\r\n\r\nconst Map = ({username}) => {\r\n    const [Date,setDate] = useState(moment());\r\n    const [Data,setData] =useState([]);\r\n    const [viewport, setViewport] = useState({\r\n        latitude: 25.017754858333614,\r\n        longitude: 121.53968590135806,\r\n        zoom: 13\r\n    });\r\n    const mapRef = useRef();\r\n    const handleViewportChange = useCallback(\r\n        (newViewport) => setViewport(newViewport),\r\n        []\r\n    );\r\n    const MAPBOX_TOKEN =\r\n        \"pk.eyJ1IjoiZW5naW5la2V2aW4iLCJhIjoiY2t5ZXVqYXU1MGJjMDJvcG1tNmY3enEwcSJ9.6zVa7flOmlUMpCSKOmwvkA\";\r\n    const handleGeocoderViewportChange = useCallback(\r\n        (newViewport) => {\r\n            const geocoderDefaultOverrides = { transitionDuration: 2000 };\r\n\r\n            return handleViewportChange({\r\n                ...newViewport,\r\n                ...geocoderDefaultOverrides\r\n            });\r\n        },\r\n        [handleViewportChange]\r\n    );\r\n    if (\"geolocation\" in navigator) {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            console.log(position.coords.latitude, position.coords.longitude);\r\n        });\r\n    }\r\n    const GetData = async ()=>{\r\n        const Y = Date.format(\"YYYY\")\r\n        const { data: { NewRecords } } = await axios.get('/api/QueryAddress', { // get backend\r\n            params: {\r\n                username, // give backend\r\n                date_Y:Y,\r\n                status:\"??��??\"\r\n            },\r\n        })\r\n        setData(NewRecords);\r\n    }\r\n    useEffect(()=>{\r\n        GetData()\r\n    },[Date])\r\n    return (\r\n        <div>\r\n            <DatePicker size=\"large\" value={Date} picker=\"year\" onChange={(date) => { setDate(date) }} allowClear={false} />\r\n            <div style={{ height: \"90vh\" }}>\r\n                <MapGL\r\n                    ref={mapRef}\r\n                    {...viewport}\r\n                    mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    onViewportChange={handleViewportChange}\r\n                    mapboxApiAccessToken={MAPBOX_TOKEN}\r\n                    transitionInterpolator={new LinearInterpolator()}\r\n                >   \r\n                    {console.log(Data)};\r\n                    {\r\n                    Data.map((info) => (\r\n                        <Pins info={info} />\r\n                    ))\r\n                    }          \r\n                    <Geocoder\r\n                        mapRef={mapRef}\r\n                        onViewportChange={handleGeocoderViewportChange}\r\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n                        position=\"top-left\"\r\n                        style={{ right: '50px', top: '10px' }}\r\n                    />\r\n                    {/* <div className=\"map-sidebar\" style={{left:'90px', bottom:'0px'}}>\r\n                        Longitude: {viewport.longitude} | Latitude: {viewport.latitude} | Zoom: {viewport.zoom}\r\n                    </div> */}\r\n                    <NavigationControl style={{ right: '10px', top: '10px' }} />\r\n                    <ScaleControl maxWidth={100} unit=\"metric\" style={{ right: '10px', bottom: '25px' }} />\r\n                    <GeolocateControl style={{ right: '10px', top: '120px' }} positionOptions={{ enableHighAccuracy: true }} trackUserLocation={false} />\r\n                </MapGL>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}