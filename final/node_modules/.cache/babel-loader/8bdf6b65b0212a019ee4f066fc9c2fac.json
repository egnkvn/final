{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\vscode\\\\webfinalproject\\\\final\\\\final\\\\final\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\vscode\\\\webfinalproject\\\\final\\\\final\\\\final\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\vscode\\\\webfinalproject\\\\final\\\\final\\\\final\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';import{DatePicker,Input}from'antd';import moment from\"moment\";import ReactApexChart from\"react-apexcharts\";import axios from'../axios.js';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var options={chart:{toolbar:{show:true}},plotOptions:{radialBar:{startAngle:-135,endAngle:225,hollow:{margin:0,size:'70%',background:'#fff',image:undefined,imageOffsetX:0,imageOffsetY:0,position:'front',dropShadow:{enabled:true,top:3,left:0,blur:4,opacity:0.24}},track:{background:'#fff',strokeWidth:'67%',margin:0,// margin is in pixels\ndropShadow:{enabled:true,top:-3,left:0,blur:4,opacity:0.35}},dataLabels:{show:true,name:{offsetY:-10,show:true,color:'#888',fontSize:'17px'},value:{formatter:function formatter(val){return parseInt(val);},color:'#111',fontSize:'36px',show:true}}}},fill:{type:'gradient',gradient:{shade:'dark',type:'horizontal',shadeIntensity:0.5,gradientToColors:['#ABE5A1'],inverseColors:true,opacityFrom:1,opacityTo:1,stops:[0,100]}},stroke:{lineCap:'round'},labels:['Percent']};var Budget=function Budget(_ref){var username=_ref.username;var _useState=useState(moment()),_useState2=_slicedToArray(_useState,2),Date=_useState2[0],setDate=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),labels=_useState4[0],setLabels=_useState4[1];var _useState5=useState(-1),_useState6=_slicedToArray(_useState5,2),type1=_useState6[0],setType1=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),BudgetData=_useState8[0],setBudgetData=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),total=_useState10[0],setTotal=_useState10[1];var _useState11=useState(100000000),_useState12=_slicedToArray(_useState11,2),bud=_useState12[0],setBud=_useState12[1];//const [series,setSeries] = useState([]);\nvar series=[[total/100]];var Get_data=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var YM,_yield$axios$get,NewRecords;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:YM=Date.format(\"YYYY-MM\");_context.next=3;return axios.get('/api/GetBudgetInformation',{params:{username:username,YM:YM}});case 3:_yield$axios$get=_context.sent;NewRecords=_yield$axios$get.data.NewRecords;return _context.abrupt(\"return\",NewRecords);case 6:case\"end\":return _context.stop();}}},_callee);}));return function Get_data(){return _ref2.apply(this,arguments);};}();var types=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var position,tempTypes,tempseries,count,spent,i;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:position={};tempTypes=new Set();tempseries=[];count=0;_context2.next=6;return Get_data();case 6:spent=_context2.sent;for(i=0;i<spent.length;i++){count+=spent[i].cost;// let Type = spent[i].type;\n// console.log(Type);\n// let cost = BudgetData[i].cost\n// if (!tempTypes.has(Type)){\n//     tempTypes.add(Type);\n//     position.Type = tempTypes.size - 1;\n//     tempseries.push(cost);\n// }\n}setTotal(count);console.log(total);//setBudgetData(Array.from(tempTypes));\ncase 10:case\"end\":return _context2.stop();}}},_callee2);}));return function types(){return _ref3.apply(this,arguments);};}();useEffect(function(){types();},[Date]);/*const HandleChange = async ()=>{\r\n    setLabels([]);\r\n    //setSeries([]);\r\n    let position = {};\r\n    let tempTypes = new Set();\r\n    let tempseries = [];\r\n    const BudgetData = await Get_data();\r\n    //console.log(BudgetData);\r\n    for(let i = 0;i < BudgetData.length;i++){   \r\n        let Type = BudgetData[i].type\r\n        let cost = BudgetData[i].cost\r\n        if(!tempTypes.has(Type)){\r\n            tempTypes.add(Type);\r\n            position.Type = tempTypes.size - 1;\r\n            tempseries.push(cost);\r\n        }\r\n        else{\r\n            tempseries = tempseries.map((item,index)=>{\r\n                if(index === position.Type) return item += cost\r\n                else return item\r\n            })\r\n        }\r\n    }\r\n    setLabels(Array.from(tempTypes));\r\n    setSeries([tempseries])\r\n  }*/var changeValue=function changeValue(e){setBud(e.target.value);};var APexChart=function APexChart(){return/*#__PURE__*/_jsx(_Fragment,{});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DatePicker,{size:\"large\",defaultValue:Date,picker:\"month\",onChange:function onChange(date){setDate(date);},allowClear:false}),/*#__PURE__*/_jsx(Input,{maxLength:25,placeholder:\"Input your budget for this month\",onChange:changeValue}),/*#__PURE__*/_jsx(ReactApexChart,{options:options,series:series,type:\"radialBar\",height:300,width:300})]});};export default Budget;","map":{"version":3,"sources":["C:/vscode/webfinalproject/final/final/final/src/Containers/Budget.js"],"names":["React","useState","useEffect","DatePicker","Input","moment","ReactApexChart","axios","options","chart","toolbar","show","plotOptions","radialBar","startAngle","endAngle","hollow","margin","size","background","image","undefined","imageOffsetX","imageOffsetY","position","dropShadow","enabled","top","left","blur","opacity","track","strokeWidth","dataLabels","name","offsetY","color","fontSize","value","formatter","val","parseInt","fill","type","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","stroke","lineCap","labels","Budget","username","Date","setDate","setLabels","type1","setType1","BudgetData","setBudgetData","total","setTotal","bud","setBud","series","Get_data","YM","format","get","params","NewRecords","data","types","tempTypes","Set","tempseries","count","spent","i","length","cost","console","log","changeValue","e","target","APexChart","date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DatePicker, Input } from 'antd';\r\nimport moment from \"moment\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from '../axios.js'\r\n\r\nconst options = {\r\n    chart: { toolbar: { show: true }},\r\n    plotOptions: {\r\n      radialBar: {\r\n        startAngle: -135,\r\n        endAngle: 225,\r\n         hollow: { \r\n           margin: 0, size: '70%', background: '#fff', image: undefined, \r\n           imageOffsetX: 0, imageOffsetY: 0, position: 'front',\r\n           dropShadow: { enabled: true, top: 3, left: 0, blur: 4, opacity: 0.24 }\r\n        },\r\n        track: {\r\n          background: '#fff',\r\n          strokeWidth: '67%',\r\n          margin: 0, // margin is in pixels\r\n          dropShadow: { enabled: true, top: -3, left: 0, blur: 4, opacity: 0.35 }\r\n        },\r\n        dataLabels: {\r\n          show: true,\r\n          name: { offsetY: -10, show: true, color: '#888', fontSize: '17px'},\r\n          value: {\r\n            formatter: function(val) {\r\n              return parseInt(val);\r\n            },\r\n            color: '#111',\r\n            fontSize: '36px',\r\n            show: true,\r\n          }\r\n        }\r\n      }\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shade: 'dark',\r\n        type: 'horizontal',\r\n        shadeIntensity: 0.5,\r\n        gradientToColors: ['#ABE5A1'],\r\n        inverseColors: true,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        stops: [0, 100]\r\n      }\r\n    },\r\n    stroke: {\r\n      lineCap: 'round'\r\n    },\r\n    labels: ['Percent'],\r\n};\r\n\r\nconst Budget = ({ username }) => {\r\n  const [Date, setDate] = useState(moment());\r\n  const [labels,setLabels] = useState([]);\r\n  const [type1, setType1] = useState(-1);\r\n  const [BudgetData, setBudgetData] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [bud, setBud] = useState(100000000);\r\n  //const [series,setSeries] = useState([]);\r\n  const series = [[total / 100],];\r\n  \r\n  const Get_data = async () => {\r\n    const YM =  Date.format(\"YYYY-MM\")\r\n    const { data: { NewRecords } } = await axios.get('/api/GetBudgetInformation', {\r\n        params: {\r\n          username,\r\n          YM,\r\n        },\r\n      });\r\n      return NewRecords;\r\n  }\r\n  \r\n  const types = async () => {\r\n      let position = {};\r\n      let tempTypes = new Set();\r\n      let tempseries = [];\r\n      let count = 0;\r\n      const spent = await Get_data();\r\n      for (let i = 0; i < spent.length; i++){\r\n        count += spent[i].cost;\r\n        // let Type = spent[i].type;\r\n        // console.log(Type);\r\n        // let cost = BudgetData[i].cost\r\n        // if (!tempTypes.has(Type)){\r\n        //     tempTypes.add(Type);\r\n        //     position.Type = tempTypes.size - 1;\r\n        //     tempseries.push(cost);\r\n        // }\r\n    }\r\n    setTotal(count);\r\n    console.log(total);\r\n    //setBudgetData(Array.from(tempTypes));\r\n  }\r\n\r\n  useEffect(()=>{\r\n      types();\r\n    },[Date]);\r\n  /*const HandleChange = async ()=>{\r\n    setLabels([]);\r\n    //setSeries([]);\r\n    let position = {};\r\n    let tempTypes = new Set();\r\n    let tempseries = [];\r\n    const BudgetData = await Get_data();\r\n    //console.log(BudgetData);\r\n    for(let i = 0;i < BudgetData.length;i++){   \r\n        let Type = BudgetData[i].type\r\n        let cost = BudgetData[i].cost\r\n        if(!tempTypes.has(Type)){\r\n            tempTypes.add(Type);\r\n            position.Type = tempTypes.size - 1;\r\n            tempseries.push(cost);\r\n        }\r\n        else{\r\n            tempseries = tempseries.map((item,index)=>{\r\n                if(index === position.Type) return item += cost\r\n                else return item\r\n            })\r\n        }\r\n    }\r\n    setLabels(Array.from(tempTypes));\r\n    setSeries([tempseries])\r\n  }*/\r\n\r\n  const changeValue = (e) => {\r\n    setBud(e.target.value);\r\n  }\r\n\r\n  const APexChart = () => {\r\n    \r\n    return (\r\n      <>\r\n      \r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DatePicker \r\n        size=\"large\" \r\n        defaultValue={Date} \r\n        picker=\"month\" \r\n        onChange={(date)=>\r\n          {setDate(date)}} \r\n        allowClear={false}\r\n      />\r\n      <Input \r\n      maxLength={25}\r\n      placeholder=\"Input your budget for this month\"\r\n      onChange={changeValue}\r\n      />\r\n      <ReactApexChart \r\n        options={options} \r\n        series={series}\r\n        type=\"radialBar\" \r\n        height={300} \r\n        width={300}\r\n      />\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Budget;\r\n"]},"metadata":{},"sourceType":"module"}